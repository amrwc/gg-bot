plugins {
    id 'application'
}

group = 'dev.amrw'
mainClassName = 'dev.amrw.bin.Application'
version = '0.0.1'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.github.docker-java:docker-java-core:3.2.7'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.2.7'
    implementation 'commons-chain:commons-chain:1.2'
    implementation 'info.picocli:picocli:4.6.1'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.14.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.14.1'

    annotationProcessor 'info.picocli:picocli-codegen:4.6.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.18'

    compileOnly 'org.projectlombok:lombok:1.18.18'

    testImplementation 'org.assertj:assertj-core:3.19.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.1'

    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.7.1') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
}

test {
    useJUnitPlatform()
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        // Display `unchecked` warnings
        options.compilerArgs << '-Xlint:unchecked'
    }
}
