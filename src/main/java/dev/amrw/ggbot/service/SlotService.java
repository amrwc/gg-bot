package dev.amrw.ggbot.service;

import dev.amrw.ggbot.dto.SlotResult;
import org.springframework.stereotype.Service;

import java.security.SecureRandom;
import java.util.Map;

/**
 * Slot machine service.
 */
@Service
public class SlotService {

    private static final Map<Integer, String> CAROUSEL = Map.of(
            1, "ðŸ’Ž",
            2, "ðŸ’¯",
            3, "ðŸ¥‡",
            4, "ðŸ’µ",
            5, "ðŸ’°"
    );

    private final SecureRandom random;

    public SlotService() {
        this.random = new SecureRandom();
    }

    public SlotResult play(final long bet) {
        final var rollBuilder = new StringBuilder();
        for (int i = 0; i < 3; i++) {
            rollBuilder.append(CAROUSEL.get(random.nextInt(CAROUSEL.size()) + 1));
        }
        final var roll = rollBuilder.toString();
        return new SlotResult(bet, calculateWinnings(bet, roll), roll);
    }

    protected long calculateWinnings(final long bet, final String roll) {
        switch (roll) {
            case "ðŸ¥‡ðŸ¥‡ðŸ¥‡":
                return Math.round(2.5 * bet);
            case "ðŸ’ŽðŸ’ŽðŸ’Ž":
                return 3L * bet;
            case "ðŸ’¯ðŸ’¯ðŸ’¯":
                return 4L * bet;
            case "ðŸ’µðŸ’µðŸ’µ":
                return 7L * bet;
            case "ðŸ’°ðŸ’°ðŸ’°":
                return 15L * bet;
        }

        if (roll.startsWith("ðŸ¥‡ðŸ¥‡") || roll.endsWith("ðŸ¥‡ðŸ¥‡")) {
            return Math.round(0.5 * bet);
        } else if (roll.startsWith("ðŸ’ŽðŸ’Ž") || roll.endsWith("ðŸ’ŽðŸ’Ž")
                || roll.startsWith("ðŸ’¯ðŸ’¯") || roll.endsWith("ðŸ’¯ðŸ’¯")) {
            return 2L * bet;
        } else if (roll.startsWith("ðŸ’µðŸ’µ") || roll.endsWith("ðŸ’µðŸ’µ")) {
            return Math.round(3.5 * bet);
        }

        return 0;
    }
}
